{"version":3,"sources":["services.js","PersonForm.js","Search.js","DeletePersonButton.js","Person.js","Persons.js","Notification.js","App.js","index.js"],"names":["baseUrl","getAllPersons","a","axios","get","response","data","createPerson","person","post","deletePerson","id","delete","updatePerson","put","PersonForm","newName","setNewName","newNumber","setNewNumber","value","onChange","event","target","type","Search","setSearchQuery","persons","filter","name","toLocaleLowerCase","startsWith","toLowerCase","DeletePersonButton","setPersons","setNotificationMessage","setNotificationClass","onClick","message","window","confirm","services","catch","setTimeout","n","Person","key","number","Persons","searchQuery","length","map","query","Notification","className","App","useState","notificationMessage","notificationClass","useEffect","then","onSubmit","preventDefault","newPerson","console","log","matchedPerson","find","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.232dc85f.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAllPersons = async () => {\r\n    const response = await axios.get(baseUrl);\r\n    return response.data;\r\n}\r\n\r\nconst createPerson = async person => {\r\n    const response = await axios.post(baseUrl, person);\r\n    return response.data;\r\n}\r\n\r\nconst deletePerson = async id => {\r\n    const response = await axios.delete(`${baseUrl}/${id}`);\r\n    return response.data;\r\n}\r\n\r\nconst updatePerson = async person => {\r\n    const response = await axios.put(`${baseUrl}/${person.id}`, person);\r\n    return response.data;\r\n}\r\n\r\nexport default {getAllPersons, createPerson, deletePerson, updatePerson}","import React from 'react'\r\n\r\nconst PersonForm = ({ newName, setNewName, newNumber, setNewNumber }) => {\r\n    return (\r\n        <>\r\n            <h2>\r\n                Add new\r\n            </h2>\r\n            <div>\r\n                name: <input value={newName} onChange={event => setNewName(event.target.value)} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={event => setNewNumber(event.target.value)} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Search = ({ setSearchQuery, persons }) => {\r\n    const searchInfo = ({ target: { value } }) => {\r\n        setSearchQuery(persons.filter(person => person.name.toLocaleLowerCase().startsWith(`${value.toLowerCase()}`)));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            filter shown with: <input onChange={searchInfo} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React from 'react';\r\nimport services from './services'\r\n\r\nconst DeletePersonButton = ({ setPersons, persons, person, setNotificationMessage, setNotificationClass }) => {\r\n    function handleDelete() {\r\n        const message = `Delete ${person.name}?`;\r\n        if (window.confirm(message)) {\r\n            services.deletePerson(person.id)\r\n                .catch(() => {\r\n                    setNotificationMessage(\r\n                        `Information of '${person.name}' has already been removed from server`\r\n                    )\r\n                    setNotificationClass('error')\r\n                    setTimeout(() => {\r\n                        setNotificationMessage(null)\r\n                        setNotificationClass(null)\r\n                    }, 5000)\r\n                    setPersons(persons.filter(n => n.id !== person.id));\r\n                })\r\n            setPersons(persons.filter(n => n.id !== person.id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <input onClick={handleDelete} type='button' value='delete' />\r\n    )\r\n}\r\n\r\nexport default DeletePersonButton","import React from 'react'\r\nimport DeletePersonButton from './DeletePersonButton'\r\n\r\nconst Person = ({ setPersons, persons, person, setNotificationMessage, setNotificationClass }) => <li key={person.id} >{person.name} {person.number} <DeletePersonButton setPersons={setPersons} persons={persons} person={person} setNotificationMessage={setNotificationMessage} setNotificationClass={setNotificationClass} /></li>\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ setPersons, persons, searchQuery, setNotificationMessage, setNotificationClass }) => {\r\n    return (\r\n        <ul>\r\n            {\r\n                searchQuery.length ?\r\n                    searchQuery.map(query =>\r\n                        <Person key={query.id} person={query} persons={persons} setPersons={setPersons} setNotificationMessage={setNotificationMessage} setNotificationClass={setNotificationClass} />\r\n                    )\r\n                    :\r\n                    persons.map(person =>\r\n                        <Person key={person.id} person={person} persons={persons} setPersons={setPersons} setNotificationMessage={setNotificationMessage} setNotificationClass={setNotificationClass} />\r\n                    )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message, className }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport services from './services'\nimport PersonForm from './PersonForm'\nimport Search from './Search'\nimport Persons from './Persons'\nimport Notification from './Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchQuery, setSearchQuery] = useState([]);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [notificationClass, setNotificationClass] = useState(null);\n\n  useEffect(() => {\n    services.getAllPersons()\n      .then(data => setPersons(data));\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    console.log(newPerson)\n    const matchedPerson = persons.find(person => person.name === newName);\n\n    if (matchedPerson) {\n      const message = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n      if (window.confirm(message)) {\n        services.updatePerson({ ...matchedPerson, number: newNumber })\n          .then(data => {\n            setPersons(persons.map(person => person.id !== data.id ? person : data));\n            setNotificationMessage(`Added ${data.name}`);\n            setNotificationClass('notification')\n            setTimeout(() => {\n              setNotificationMessage(null)\n              setNotificationClass(null)\n            }, 5000);\n          })\n          .catch(() => {\n            setNotificationMessage(\n              `Information of '${matchedPerson.name}' has already been removed from server`\n            )\n            setNotificationClass('error')\n            setTimeout(() => {\n              setNotificationMessage(null)\n              setNotificationClass(null)\n            }, 5000)\n            setPersons(persons.filter(person => person.id !== matchedPerson.id));\n          })\n        return;\n      }\n      return;\n    }\n\n    services.createPerson(newPerson)\n      .then(data => {\n        setPersons(persons.concat(data));\n        setNotificationMessage(`Added ${data.name}`);\n        setNotificationClass('notification')\n        setTimeout(() => {\n          setNotificationMessage(null)\n          setNotificationClass(null)\n        }, 5000);\n      })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} className={notificationClass} />\n      <form onSubmit={addPerson} >\n        <Search setSearchQuery={setSearchQuery} persons={persons} />\n        <PersonForm newName={newName} newNumber={newNumber} setNewName={setNewName} setNewNumber={setNewNumber} />\n      </form>\n      <h2>Numbers</h2>\n      <Persons setPersons={setPersons} persons={persons} searchQuery={searchQuery} setNotificationMessage={setNotificationMessage} setNotificationClass={setNotificationClass} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}